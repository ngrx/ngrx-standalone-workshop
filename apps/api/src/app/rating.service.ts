import { Injectable } from '@nestjs/common';
import {
  Product,
  ProductRating,
  Review,
} from '@angular-monorepo/api-interfaces';
import { data } from '@angular-monorepo/mock-data';

@Injectable()
export class RatingService {
  private readonly ratings: ProductRating[] = [];
  private readonly reviews = generateReviews(data);

  setRating(productRating: ProductRating): ProductRating[] {
    const previousProductRating = this.ratings.find(
      (rating) => productRating.productId === rating.productId
    );
    if (previousProductRating) {
      previousProductRating.rating = productRating.rating;
    } else {
      this.ratings.push(productRating);
    }
    return this.ratings;
  }

  getRating(id: string): ProductRating | undefined {
    return this.ratings.find((rating) => id === rating.productId);
  }

  getRatings(): ProductRating[] {
    return this.ratings;
  }
  getReviews(productId: string): Review[] {
    // reversing, so that more recent appear first.
    return [...this.reviews[productId]].reverse() || [];
  }

  addReview(
    reviewRequest: Pick<Review, 'productId' | 'reviewText' | 'reviewer'>
  ): Review {
    const review: Review = {
      ...reviewRequest,
      reviewDate: new Date().valueOf(),
    };
    this.reviews[review.productId].push(review);
    return review;
  }
}

function generateReviews(data: Product[]): { [productId: string]: Review[] } {
  return data
    .map(({ id }) => id)
    .reduce((acc, id) => {
      // from 0 to 4 reviews per product
      const reviews = [];
      const reviewsCount = Math.floor(Math.random() * 5);
      for (let i = 0; i < reviewsCount; i++) {
        reviews.push({
          productId: id,
          reviewer: NAMES[Math.floor(Math.random() * NAMES.length)],
          reviewText: REVIEWS[Math.floor(Math.random() * REVIEWS.length)],
          reviewDate: new Date().valueOf() + i,
        });
      }
      acc[id] = reviews;
      return acc;
    }, {});
}

const REVIEWS = [
  'This product is awesome!',
  'Love it',
  'The best product you can get ♥️',
  `It's amazing`,
  'I want to buy more!',
  'I was expecting more from this product',
  'does not meet my expectations',
  'I demand a refund',
  `Meh... it's OK`,
  `Got a wrong color`,
];
const NAMES = [
  'Aaran',
  'Aaren',
  'Aarez',
  'Aarman',
  'Aaron',
  'Aaron-James',
  'Aarron',
  'Aaryan',
  'Aaryn',
  'Aayan',
  'Aazaan',
  'Abaan',
  'Abbas',
  'Abdallah',
  'Abdalroof',
  'Abdihakim',
  'Abdirahman',
  'Abdisalam',
  'Abdul',
  'Abdul-Aziz',
  'Abdulbasir',
  'Abdulkadir',
  'Abdulkarem',
  'Abdulkhader',
  'Abdullah',
  'Abdul-Majeed',
  'Abdulmalik',
  'Abdul-Rehman',
  'Abdur',
  'Abdurraheem',
  'Abdur-Rahman',
  'Abdur-Rehmaan',
  'Abel',
  'Abhinav',
  'Abhisumant',
  'Abid',
  'Abir',
  'Abraham',
  'Abu',
  'Abubakar',
  'Ace',
  'Adain',
  'Adam',
  'Adam-James',
  'Addison',
  'Addisson',
  'Adegbola',
  'Adegbolahan',
  'Aden',
  'Adenn',
  'Adie',
  'Adil',
  'Aditya',
  'Adnan',
  'Adrian',
  'Adrien',
  'Aedan',
  'Aedin',
  'Aedyn',
  'Aeron',
  'Afonso',
  'Ahmad',
  'Ahmed',
  'Ahmed-Aziz',
  'Ahoua',
  'Ahtasham',
  'Aiadan',
  'Aidan',
  'Aiden',
  'Aiden-Jack',
  'Aiden-Vee',
  'Aidian',
  'Aidy',
  'Ailin',
  'Aiman',
  'Ainsley',
  'Ainslie',
  'Airen',
  'Airidas',
  'Airlie',
  'AJ',
  'Ajay',
  'A-Jay',
  'Ajayraj',
  'Akan',
  'Akram',
  'Al',
  'Ala',
  'Alan',
  'Alanas',
  'Alasdair',
  'Alastair',
  'Alber',
  'Albert',
  'Albie',
  'Aldred',
  'Alec',
  'Aled',
  'Aleem',
  'Aleksandar',
  'Aleksander',
  'Aleksandr',
  'Aleksandrs',
  'Alekzander',
  'Alessandro',
  'Alessio',
  'Alex',
  'Alexander',
  'Alexei',
  'Alexx',
  'Alexzander',
  'Alf',
  'Alfee',
  'Alfie',
  'Alfred',
  'Alfy',
  'Alhaji',
  'Al-Hassan',
  'Ali',
  'Aliekber',
  'Alieu',
  'Alihaider',
  'Alisdair',
  'Alishan',
  'Alistair',
  'Alistar',
  'Alister',
  'Aliyaan',
  'Allan',
  'Allan-Laiton',
  'Allen',
  'Allesandro',
  'Allister',
  'Ally',
  'Alphonse',
  'Altyiab',
  'Alum',
  'Alvern',
  'Alvin',
  'Alyas',
  'Amaan',
  'Aman',
  'Amani',
  'Ambanimoh',
  'Ameer',
  'Amgad',
  'Ami',
  'Amin',
  'Amir',
  'Ammaar',
  'Ammar',
  'Ammer',
  'Amolpreet',
  'Amos',
  'Amrinder',
  'Amrit',
  'Amro',
  'Anay',
  'Andrea',
  'Andreas',
  'Andrei',
  'Andrejs',
  'Andrew',
  'Andy',
  'Anees',
  'Anesu',
  'Angel',
  'Angelo',
  'Angus',
  'Anir',
  'Anis',
  'Anish',
  'Anmolpreet',
  'Annan',
  'Anndra',
  'Anselm',
  'Anthony',
  'Anthony-John',
  'Antoine',
  'Anton',
  'Antoni',
  'Antonio',
  'Antony',
  'Antonyo',
  'Anubhav',
  'Aodhan',
  'Aon',
  'Aonghus',
  'Apisai',
  'Arafat',
  'Aran',
  'Arandeep',
  'Arann',
  'Aray',
  'Arayan',
  'Archibald',
  'Archie',
  'Arda',
  'Ardal',
  'Ardeshir',
  'Areeb',
  'Areez',
  'Aref',
  'Arfin',
  'Argyle',
  'Argyll',
  'Ari',
  'Aria',
  'Arian',
  'Arihant',
  'Aristomenis',
  'Aristotelis',
  'Arjuna',
  'Arlo',
  'Armaan',
  'Arman',
  'Armen',
  'Arnab',
  'Arnav',
  'Arnold',
  'Aron',
  'Aronas',
  'Arran',
  'Arrham',
  'Arron',
  'Arryn',
  'Arsalan',
  'Artem',
  'Arthur',
  'Artur',
  'Arturo',
  'Arun',
  'Arunas',
  'Arved',
  'Arya',
  'Aryan',
  'Aryankhan',
  'Aryian',
  'Aryn',
  'Asa',
  'Asfhan',
  'Ash',
  'Ashlee-jay',
  'Ashley',
  'Ashton',
  'Ashton-Lloyd',
  'Ashtyn',
  'Ashwin',
  'Asif',
  'Asim',
  'Aslam',
  'Asrar',
  'Ata',
  'Atal',
  'Atapattu',
  'Ateeq',
  'Athol',
  'Athon',
  'Athos-Carlos',
  'Atli',
  'Atom',
  'Attila',
  'Aulay',
  'Aun',
  'Austen',
  'Austin',
  'Avani',
  'Averon',
  'Avi',
  'Avinash',
  'Avraham',
  'Awais',
  'Awwal',
  'Axel',
  'Ayaan',
  'Ayan',
  'Aydan',
  'Ayden',
  'Aydin',
  'Aydon',
  'Ayman',
  'Ayomide',
  'Ayren',
  'Ayrton',
  'Aytug',
  'Ayub',
  'Ayyub',
  'Azaan',
  'Azedine',
  'Azeem',
  'Azim',
  'Aziz',
  'Azlan',
  'Azzam',
  'Azzedine',
];
